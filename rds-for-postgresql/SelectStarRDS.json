{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Stack to enable integration SelectStar with AWS RDS for PostgreSQL",
    "Parameters": {
        "ServerName": {
            "Type": "String",
            "AllowedPattern": "[\\w-]+",
            "Description": "Also known as \"DB identifier\" by AWS."
        },
        "Db": {
            "Description": "Comma separated list of Postgresql databases to grant access for Select Star.",
            "Type": "CommaDelimitedList"
        },
        "Schema": {
            "Description": "Comma separated list of Postgresql schemas to grant access for Select Star.",
            "Type": "CommaDelimitedList"
        },
        "DbUser": {
            "Type": "String",
            "Default": "postgres",
            "Description": "PostgreSQL username used to connection for provision access for Select Star. This user is used only by CloudFormation for the purposes of eg. creating a user account with minimal rights, including without access to data necessary for integration.",
            "AllowedPattern": ".+"
        },
        "DbPassword": {
            "Type": "String",
            "NoEcho": true,
            "Description": "Password of PostgreSQL user used to connection for provision access for Select Star.",
            "AllowedPattern": ".+"
        },
        "ExternalId": {
            "Description": "The Select Star external ID to authenticate your AWS account. Do not change or share this.",
            "MinLength": "1",
            "Type": "String"
        },
        "IamPrincipal": {
            "Description": "The Select Star IAM principal which has permission to your AWS account. Do not change this.",
            "MinLength": "1",
            "Type": "String"
        },
        "ConfigureLogging": {
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Description": "If true and CloudWatch logging disabled then the Postgresql instance configuration can be changed to enable CloudWatch logging. It is recommended to set the value \"true\"."
        },
        "ConfigureLoggingRestart": {
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Description": "If true and logging changes made then the Postgresql instance can be restarted to apply changes. It is recommended to set the value \"true\"."
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "AWS RDS for PostgreSQL configuration"
                    },
                    "Parameters": [
                        "ServerName",
                        "Db",
                        "Schema",
                        "DbUser",
                        "DbPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Provisioning"
                    },
                    "Parameters": [
                        "ConfigureLogging",
                        "ConfigureLoggingRestart"
                    ]
                },
                {
                    "Label": {
                        "default": "Read-only. Do not change this."
                    },
                    "Parameters": [
                        "ExternalId",
                        "IamPrincipal"
                    ]
                }
            ],
            "ParameterLabels": {
                "ServerName": {
                    "default": "RDS server name"
                },
                "Db": {
                    "default": "PostgreSQL databases granted"
                },
                "Schema": {
                    "default": "PostgreSQL schema granted"
                },
                "ConfigureLogging": {
                    "default": "Configure CloudWatch logging (if disabled)"
                },
                "ConfigureLoggingRestart": {
                    "default": "Restart Server (if necessary to apply changes)"
                }
            }
        }
    },
    "Resources": {
        "DatabaseSecret": {
            "Type": "AWS::SecretsManager::Secret",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}/selectstar-user-credentials"
                },
                "GenerateSecretString": {
                    "SecretStringTemplate": "{\"username\": \"selectstar\"}",
                    "GenerateStringKey": "password",
                    "PasswordLength": 20,
                    "ExcludeCharacters": "\"@/\\"
                }
            }
        },
        "CrossAccountRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "rds:List*",
                                "rds:Describe*",
                                "rds:Get*"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${ServerName}"
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "rds-db:connect"
                            ],
                            "Resource": {
                                "Fn::Sub": "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:dbuser:db-${ServerName}/selectstar"
                            }
                        },
                        {
                            "Action": [
                                "logs:Get*",
                                "logs:List*",
                                "logs:StartQuery",
                                "logs:StopQuery",
                                "logs:Describe*",
                                "logs:FilterLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/rds/instance/${ServerName}/*:*"
                            }
                        },
                        {
                            "Action": "logs:GetQueryResults",
                            "Effect": "Allow",
                            "Resource": "arn:aws:logs:*:*:log-group::log-stream:"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "secretsmanager:GetResourcePolicy",
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:DescribeSecret",
                                "secretsmanager:ListSecretVersionIds"
                            ],
                            "Resource": {
                                "Ref": "DatabaseSecret"
                            }
                        }
                    ]
                },
                "PolicyName": "EnableSelectStar",
                "Roles": [
                    {
                        "Ref": "CrossAccountRole"
                    }
                ]
            }
        },
        "CrossAccountRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Ref": "IamPrincipal"
                                }
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "ExternalId"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "LambdaAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "rds:*",
                                        "rds-db:*"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${ServerName}"
                                        },
                                        {
                                            "Fn::Sub": "arn:aws:redshift:${AWS::Region}:${AWS::AccountId}:pg:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "secretsmanager:GetResourcePolicy",
                                        "secretsmanager:GetSecretValue",
                                        "secretsmanager:DescribeSecret",
                                        "secretsmanager:ListSecretVersionIds"
                                    ],
                                    "Resource": {
                                        "Ref": "DatabaseSecret"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Timeout": 300,
                "Handler": "provision.handler",
                "Code": {
                    "S3Bucket": "cf-templates-pp3cips1o7jf-us-east-2",
                    "S3Key": "rds-for-postgresql/deployment-package.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.8",
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },
        "LambdaProvision": {
            "Type": "Custom::LambdaProvision",
            "Version": "1.0",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "LambdaFunction",
                        "Arn"
                    ]
                },
                "secretArn": {
                    "Ref": "DatabaseSecret"
                },
                "ServerName": {
                    "Ref": "ServerName"
                },
                "Db": {
                    "Ref": "Db"
                },
                "Schema": {
                    "Ref": "Schema"
                },
                "DbUser": {
                    "Ref": "DbUser"
                },
                "DbPassword": {
                    "Ref": "DbPassword"
                },
                "Region": {
                    "Fn::Sub": "${AWS::Region}"
                },
                "ConfigureLogging": {
                    "Ref": "ConfigureLogging"
                },
                "ConfigureLoggingRestart": {
                    "Ref": "ConfigureLoggingRestart"
                }
            }
        }
    },
    "Outputs": {
        "RoleArn": {
            "Value": {
                "Fn::GetAtt": [
                    "CrossAccountRole",
                    "Arn"
                ]
            },
            "Description": "The ARN value of the Cross-Account Role with IAM read-only permissions. Add this ARN value to Select Star."
        },
        "secretArn": {
            "Value": {
                "Ref": "DatabaseSecret"
            },
            "Description": "The name of Secret of AWS Secret Manager which stores credentials for Select Star account in PostgreSQL. Add this value to Select Star."
        }
    }
}